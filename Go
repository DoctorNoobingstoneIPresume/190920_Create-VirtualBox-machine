#!/bin/bash
set -e -o pipefail
shopt -s extglob


## [2019-11-19]
## 
##   This script should be in the folder with VirtualBox virtual machines.
##   
##   After having run it, please modify the generated .vbox file:
##     Change
##       <Logo fadeIn="true" fadeOut="true" displayTime="0" imagePath="Isabeau-1-cropped.bmp"/>
##     to
##       <Logo fadeIn="true" fadeOut="true" displayTime="0" imagePath="G:/VM_G/191119-015328_Deborah/Isabeau-1-cropped.bmp"/>
##     (of course, replacing with the full pathname of where the image resides).
##     This enables the boot logo image.


function Create ()
{
	#which VBoxManage
	
	local sVBoxManage="echo VBoxManage "
	
	
	local tNow="$(date +"%y%m%d-%H%M%S")"
	#local tUse="190925-141300"
	local tUse="${tNow}"
	echo "## tNow ${tNow}, tUse {$tUse}..."
	
	local sName="${tUse}_SyndiVM"
	
	
	
	if ((1)); then
		if [ -d "${sName}/" ]; then
			echo "## Unregistering \"${sName}\..."
			${sVBoxManage} unregistervm "${sName}"         || true
			mv "${sName}/"          "${sName}_${tNow}"
			echo
		fi
		
		if true; then
			echo "## Creating machine \"${sName}\"..."
			if   [ -d "${sName}/" ]; then echo "## \"${sName}\" is already a folder !"; exit 1; fi
			${sVBoxManage} createvm --name "${sName}" --ostype "Debian_64" --register
			#if ! [ -d "${sName}/" ]; then echo "## \"${sName}\" is not a folder !"    ; exit 1; fi
			echo
		fi
	fi
	
	
	
	if ((0)); then
		echo "## Showing..."
		${sVBoxManage} showvminfo "${sName}"
		echo
	fi
	
	
	
	if ((1)); then
		echo "## Modifying..."
		${sVBoxManage} modifyvm "${sName}" \
			--memory                   2048          \
			--vram                       32          \
			--ioapic                   on            \
			--rtcuseutc                on            \
			--cpus                        2          \
			--accelerate2dvideo        off           \
			--accelerate3d             on            \
			\
			--clipboard                bidirectional \
			--draganddrop              bidirectional \
			\
			--bioslogoimagepath        "Media/Isabeau-1-cropped.bmp" \
			--boot1                    "none"        \
			--boot2                    "dvd"         \
			--boot3                    "disk"        \
			--boot4                    "none"        \
		
		${sVBoxManage} storagectl "${sName}" --name "IDE"  --add "ide"
		${sVBoxManage} storagectl "${sName}" --name "SATA" --add "sata"
		
		echo
	fi
	
	
	
	if ((0)); then
		echo "## Showing..."
		${sVBoxManage} showvminfo "${sName}"
		echo
	fi
	
	
	
	echo
	
	if ((1)); then
		echo "## Creating disks..."
		
		#${sVBoxManage} storageattach "${sName}" --storagectl "IDE" --port "0" --device "0" --type "dvddrive" --medium "none"
		
		#sVariant="Split2G"
		sVariant="Standard"
		
		local asDisks=()
		{
			## [2020-08-24]
			## 
			##   Setup of storage:
			##   
			##     We are creating multiple 1-TiB disks.
			##     No need to worry: VirtualBox is only going to save the part which is actually used.
			##     
			##     Each disk should have a single partition, initially of a much smaller size (e.g. 16 GiB or 32 GiB for the root partition).
			##     
			##     This is (I believe) a better setup than multiple partitions on a single disk:
			##     it allows lean-and-mean backups
			##     (including backups of individual partitions,
			##     because they are reside on separate virtual disk files).
			##     
			##     This setup also allows us to grow the partitions easily when needed:
			##     we can boot the virtual machine from a Linux optical disk image and (install and) run gparted
			##     and increase the size of any partition (because there is space up to 1 TiB on the virtual disk).
			##     
			##     This setup also allows us to make the swap partition immutable:
			##     its virtual disk need not occupy space when the virtual machine is powered off.
			
			asDisks+=("Root   ; 1048576; normal   ")     # 32768
			asDisks+=("Swap   ; 1048576; normal   ")     #  2048
			asDisks+=("Home   ; 1048576; normal   ")     #  4096
			#asDisks+=("DevKits; 1048576; normal   ")     # 32768
			#asDisks+=("Work   ; 1048576; normal   ")     # 32768
			#asDisks+=("Play   ; 1048576; normal   ")     # 32768
			#asDisks+=("Hack   ; 1048576; normal   ")     # 32768
			asDisks+=("Fun1   ; 1048576; normal   ")
			asDisks+=("Fun2   ; 1048576; normal   ")
		}
		
		local iDisk=0
		local sDisk
		for sDisk in "${asDisks[@]}"; do
			#echo "## \"${sDisk}\""
			local asSubDisks=()
			{
				IFS=";" read -r -a asSubDisks <<< "${sDisk}"
			}
			
			{
				if ((0)); then
					local sSubDisk
					for sSubDisk in "${asSubDisks[@]}"; do
						local sSubDisk1="${sSubDisk}"
						sSubDisk1="${sSubDisk1%%*( )}"
						sSubDisk1="${sSubDisk1##*( )}"
						printf "##     %-24s %-24s\n" "\"${sSubDisk}\"" "\"${sSubDisk1}\""
					done
				fi
				
				local sDiskName="${asSubDisks[0]?Bad entry in asDisks !}"; sDiskName="${sDiskName##*( )}"; sDiskName="${sDiskName%%*( )}"
				local sDiskSize="${asSubDisks[1]?Bad entry in asDisks !}"; sDiskSize="${sDiskSize##*( )}"; sDiskSize="${sDiskSize%%*( )}"
				local sDiskType="${asSubDisks[2]?Bad entry in asDisks !}"; sDiskType="${sDiskType##*( )}"; sDiskType="${sDiskType%%*( )}"
				printf "##     %-16s %'9u %s\n" "\"${sDiskName}\"" "${sDiskSize}" "\"${sDiskType}\""
				
				${sVBoxManage} closemedium  disk                                                "${sName}/${sDiskName}.vdi" --delete >/dev/null 2>&1 || true
				${sVBoxManage} createmedium disk --format "VDI" --variant "Standard" --filename "${sName}/${sDiskName}.vdi" --size "${sDiskSize}"
				${sVBoxManage} storageattach "${sName}" --storagectl "SATA" --port "${iDisk}" --type "hdd" --medium "${sName}/${sDiskName}.vdi" --mtype "\"${sDiskType}\""
			}
			
			((++iDisk))
		done
		
		echo
	fi
	
	
	cat <<-'EOF'
		echo
		## The virtual machine sub-folder has been created in the folder configured for VirtualBox.
		##
		## But the sub-folder with the disks is in the current folder.
		## In order to move the disks:
		##   - please start VirtualBox without starting the virtual machine;
		##   - go to (Menu) -> "File" (or the Global Tools toolbar button) -> "Virtual Media Manager";
		##   - make sure the Hard disks tab is selected;
		##   - right-click each individual disk and from the popup menu select "Move...".
		##
		## Also, in order to enable the boot logo image, please modify the generated .vbox file:
		##     Change
		##         <Logo fadeIn="true" fadeOut="true" displayTime="0" imagePath="Isabeau-1-cropped.bmp"/>
		##     to
		##         <Logo fadeIn="true" fadeOut="true" displayTime="0" imagePath="G:/VM_G/191119-015328_Deborah/Isabeau-1-cropped.bmp"/>
		##         (of course, replacing with the full pathname of where the image resides).
		##
		EOF
	
	#echo "## Hello, World !"
}

function Main ()
{
	Create
	if [ $? -ne 0 ]; then echo "## Error $? !"; fi
}

echo "Bau !"
